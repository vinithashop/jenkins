pipeline {
   agent any

   tools {
      // Install the Maven version configured as "M3" and add it to the path.
      maven "maven"
   }

   stages {
      stage('Build') {
         steps {
            // Get some code from a GitHub repository
            git 'https://github.com/vinithashop/spring3-mvc-maven-xml-hello-world.git'

            // Run Maven on a Unix agent.
            sh "mvn package"

            // To run Maven on a Windows agent, use
            // bat "mvn -Dmaven.test.failure.ignore=true clean package"
         }
        post {
            // If Maven was able to run the tests, even if some of the test
            // failed, record the test results and archive the jar file.
            success {
               archiveArtifacts 'target/*.war'
            }
			}

      }
      stage('deploy'){
          steps {
              sh "sudo cp /var/lib/jenkins/workspace/web-pipeline/target/spring3-mvc-maven-xml-hello-world-1.2.war /var/lib/tomcat/webapps/"
          }
       
    }
    stage ('success'){
            steps {
                script {
                    currentBuild.result = 'SUCCESS'
                }
            }
        }
    }

    post {
        failure {
            script {
                currentBuild.result = 'FAILURE'
            }
        }

        always {
            step([$class: 'Mailer',
                notifyEveryUnstableBuild: true,
                recipients: "vinithashop@gmail.com",
                sendToIndividuals: true])
        }
    }
}
